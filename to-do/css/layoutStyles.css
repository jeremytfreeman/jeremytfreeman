*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  font-family: Helvetica, arial, sans-serif;
  font-size: 16px;
  margin: 24px;
  font-weight: 400;
}

h2 {
  font-weight: 500;
}

header {
  width: 100%;
  height: 64px;
}

#taskapp-container {
  max-width: 540px;
}

#task-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

h1 {
  font-weight: lighter;
  font-size: 40px;
}

span {
  display: block;
  width: 100%;
  padding: 16px;
  line-height: 22px;
}

#themeButton {
  height: 32px;
  padding: 0px;
}

i {
  cursor: pointer;
}

p {
  margin: 0;
}

ul {
  list-style-type: none;
  padding: 0;
  margin-top: 0;
}

li {
  margin: 8px 0;
  padding: 16px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 8px;
}

li.done {
  text-decoration: line-through;
}

/* button not not needed */
li button {
  height: 32px;
  padding: 0;
  margin-left: 20px;
  border: none;
  padding-left: 8px;
  padding-right: 8px;
  font-size: 12px;
}

li.done button {
  text-decoration: none;
}

li i {
  cursor: pointer;
  margin-left: 12px;
}

.buttonDiv {
  text-align: right;
  flex-shrink: 0;
  margin-left: 12px;
  font-size: 18px;
}

#inputContainer {
  display: flex;
  position: relative;
  border: none;
}

#inputContainer input {
  position: relative;
  width: 100%;
}

#inputContainer i {
  position: absolute;
  right: 16px;
  top: 50%;
  transform: translateY(-50%);
}

#taskInput {
  width: 100%;
  font-size: 20px;
  padding: 24px;
  border-radius: 8px;
  margin: 0;
}

#taskInput::placeholder {
  font-weight: normal;
}

#taskInput:focus {
  border: none;
}

/*Task item is invisible initially  */
.task {
  opacity: 0;
  cursor: grab;
}

.task:active {
  transition-delay: 0.05s;
  transform: rotate(10deg);
  opacity: 1;
}

/* Fade in effect when a task is added */
.fade-in {
  opacity: 1;
}

/* Fade out effect when a task is removed */
.fade-out {
  opacity: 0 !important;
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 0;
  padding-bottom: 0;
  overflow: hidden;
  height: 0;
  background-color: var(--addColor);
  opacity: 1;
  transition: height 1s ease-in-out, padding-top 0.7s ease-in-out,
    padding-bottom 0.7s ease-in-out, margin-top 0.7s ease-in-out,
    margin-bottom 0.7s ease-in-out, overflow 0.7s ease-in-out;
}

.dragging {
  cursor: grabbing;
}

/* Hide the default checkbox */
li .custom-checkbox input[type="checkbox"] {
  display: none;
}

/* Create a custom checkbox appearance */
li .custom-checkbox .checkmark {
  width: 16px !important;
  height: 16px !important;
  background-color: var(--addColor);
  border-radius: 4px;
  display: inline-block;
  position: relative;
  cursor: pointer;
  transition: background-color 0.3s;
}

/* Style for when the checkbox is checked */
li .custom-checkbox input[type="checkbox"]:checked + .checkmark {
  background-color: #4caf50;
}

.checkmark {
  display: block;
}

/* Add a checkmark using a pseudo-element */
li .custom-checkbox .checkmark::after {
  content: "";
  position: absolute;
  display: none;
  left: 12px;
  top: 6px;
  width: 8px;
  height: 16px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* Display the checkmark when checked */
li .custom-checkbox input[type="checkbox"]:checked + .checkmark::after {
  display: block;
}
